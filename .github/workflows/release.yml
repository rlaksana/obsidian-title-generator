# This GitHub Actions workflow automates the process of creating a new release.
# It is triggered automatically on every push to the 'main' branch.

name: 'Automatic Release'

on:
  push:
    branches:
      - main # Or 'master', depending on your repository's default branch

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 'Install Dependencies'
        run: npm install --legacy-peer-deps

      - name: 'Build Plugin'
        run: npm run build

      - name: 'Auto-increment Version'
        run: |
          # Get current version from manifest.json
          CURRENT_VERSION=$(jq -r .version manifest.json)
          echo "Current version: $CURRENT_VERSION"
          
          # Extract major, minor, patch numbers
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
          echo "New version: $NEW_VERSION"
          
          # Update manifest.json
          jq --arg version "$NEW_VERSION" '.version = $version' manifest.json > manifest.tmp && mv manifest.tmp manifest.json
          
          # Update package.json
          jq --arg version "$NEW_VERSION" '.version = $version' package.json > package.tmp && mv package.tmp package.json
          
          # Update versions.json
          jq --arg version "$NEW_VERSION" --arg minVersion "0.15.0" '. + {($version): $minVersion}' versions.json > versions.tmp && mv versions.tmp versions.json
          
          # Set output for next step
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: 'Commit Version Update'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add manifest.json package.json versions.json
          git commit -m "Auto-increment version to $NEW_VERSION [skip ci]" || exit 0
          git push

      - name: 'Create GitHub Release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v$NEW_VERSION"
          
          # Create the release using the GitHub CLI
          # The --generate-notes flag will automatically create release notes
          # from the titles of the pull requests included in the push.
          gh release create "$TAG" \
            --title "Release $TAG" \
            --generate-notes \
            dist/main.js dist/manifest.json